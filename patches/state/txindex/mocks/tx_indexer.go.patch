diff --git a/state/txindex/mocks/tx_indexer.go b/state/txindex/mocks/tx_indexer.go
index 93d0eb9c2..4cf73d82a 100644
--- a/state/txindex/mocks/tx_indexer.go
+++ b/state/txindex/mocks/tx_indexer.go
@@ -22,6 +22,10 @@ type TxIndexer struct {
 func (_m *TxIndexer) AddBatch(b *txindex.Batch) error {
 	ret := _m.Called(b)
 
+	if len(ret) == 0 {
+		panic("no return value specified for AddBatch")
+	}
+
 	var r0 error
 	if rf, ok := ret.Get(0).(func(*txindex.Batch) error); ok {
 		r0 = rf(b)
@@ -36,7 +40,15 @@ func (_m *TxIndexer) AddBatch(b *txindex.Batch) error {
 func (_m *TxIndexer) Get(hash []byte) (*types.TxResult, error) {
 	ret := _m.Called(hash)
 
+	if len(ret) == 0 {
+		panic("no return value specified for Get")
+	}
+
 	var r0 *types.TxResult
+	var r1 error
+	if rf, ok := ret.Get(0).(func([]byte) (*types.TxResult, error)); ok {
+		return rf(hash)
+	}
 	if rf, ok := ret.Get(0).(func([]byte) *types.TxResult); ok {
 		r0 = rf(hash)
 	} else {
@@ -45,7 +57,6 @@ func (_m *TxIndexer) Get(hash []byte) (*types.TxResult, error) {
 		}
 	}
 
-	var r1 error
 	if rf, ok := ret.Get(1).(func([]byte) error); ok {
 		r1 = rf(hash)
 	} else {
@@ -59,6 +70,10 @@ func (_m *TxIndexer) Get(hash []byte) (*types.TxResult, error) {
 func (_m *TxIndexer) Index(result *types.TxResult) error {
 	ret := _m.Called(result)
 
+	if len(ret) == 0 {
+		panic("no return value specified for Index")
+	}
+
 	var r0 error
 	if rf, ok := ret.Get(0).(func(*types.TxResult) error); ok {
 		r0 = rf(result)
@@ -73,7 +88,15 @@ func (_m *TxIndexer) Index(result *types.TxResult) error {
 func (_m *TxIndexer) Search(ctx context.Context, q *query.Query) ([]*types.TxResult, error) {
 	ret := _m.Called(ctx, q)
 
+	if len(ret) == 0 {
+		panic("no return value specified for Search")
+	}
+
 	var r0 []*types.TxResult
+	var r1 error
+	if rf, ok := ret.Get(0).(func(context.Context, *query.Query) ([]*types.TxResult, error)); ok {
+		return rf(ctx, q)
+	}
 	if rf, ok := ret.Get(0).(func(context.Context, *query.Query) []*types.TxResult); ok {
 		r0 = rf(ctx, q)
 	} else {
@@ -82,7 +105,6 @@ func (_m *TxIndexer) Search(ctx context.Context, q *query.Query) ([]*types.TxRes
 		}
 	}
 
-	var r1 error
 	if rf, ok := ret.Get(1).(func(context.Context, *query.Query) error); ok {
 		r1 = rf(ctx, q)
 	} else {
@@ -92,13 +114,12 @@ func (_m *TxIndexer) Search(ctx context.Context, q *query.Query) ([]*types.TxRes
 	return r0, r1
 }
 
-type mockConstructorTestingTNewTxIndexer interface {
+// NewTxIndexer creates a new instance of TxIndexer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
+// The first argument is typically a *testing.T value.
+func NewTxIndexer(t interface {
 	mock.TestingT
 	Cleanup(func())
-}
-
-// NewTxIndexer creates a new instance of TxIndexer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
-func NewTxIndexer(t mockConstructorTestingTNewTxIndexer) *TxIndexer {
+}) *TxIndexer {
 	mock := &TxIndexer{}
 	mock.Mock.Test(t)
 
