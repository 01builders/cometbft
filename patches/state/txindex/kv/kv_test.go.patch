diff --git a/state/txindex/kv/kv_test.go b/state/txindex/kv/kv_test.go
index 60b4047fc..d805cc3c8 100644
--- a/state/txindex/kv/kv_test.go
+++ b/state/txindex/kv/kv_test.go
@@ -136,6 +136,35 @@ func TestTxIndex(t *testing.T) {
 	assert.True(t, proto.Equal(txResult2, loadedTxResult2))
 }
 
+func TestWrappedTxIndex(t *testing.T) {
+	indexer := NewTxIndex(db.NewMemDB())
+
+	tx := types.Tx("HELLO WORLD")
+	wrappedTx, err := types.MarshalIndexWrapper(tx, 11)
+	require.NoError(t, err)
+	txResult := &abci.TxResult{
+		Height: 1,
+		Index:  0,
+		Tx:     wrappedTx,
+		Result: abci.ResponseDeliverTx{
+			Data: []byte{0},
+			Code: abci.CodeTypeOK, Log: "", Events: nil,
+		},
+	}
+	hash := tx.Hash()
+
+	batch := txindex.NewBatch(1)
+	if err := batch.Add(txResult); err != nil {
+		t.Error(err)
+	}
+	err = indexer.AddBatch(batch)
+	require.NoError(t, err)
+
+	loadedTxResult, err := indexer.Get(hash)
+	require.NoError(t, err)
+	assert.True(t, proto.Equal(txResult, loadedTxResult))
+}
+
 func TestTxSearch(t *testing.T) {
 	indexer := NewTxIndex(db.NewMemDB())
 
@@ -663,8 +692,18 @@ func TestTxSearchMultipleTxs(t *testing.T) {
 
 	results, err := indexer.Search(ctx, query.MustParse("account.number >= 1"))
 	assert.NoError(t, err)
-
 	require.Len(t, results, 3)
+
+	// since two txs were added at height 1 and 2, we should have two unique transactions
+	// for both heights
+	results, err = indexer.Search(ctx, query.MustParse("tx.height=1"))
+	assert.NoError(t, err)
+	require.Len(t, results, 2)
+
+	results, err = indexer.Search(ctx, query.MustParse("tx.height=2"))
+	assert.NoError(t, err)
+	require.Len(t, results, 2)
+
 }
 
 func txResultWithEvents(events []abci.Event) *abci.TxResult {
