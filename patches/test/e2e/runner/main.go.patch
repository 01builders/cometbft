diff --git a/test/e2e/runner/main.go b/test/e2e/runner/main.go
index f4c8fd60a..30d0d3232 100644
--- a/test/e2e/runner/main.go
+++ b/test/e2e/runner/main.go
@@ -9,6 +9,7 @@ import (
 	"github.com/spf13/cobra"
 
 	"github.com/tendermint/tendermint/libs/log"
+	"github.com/tendermint/tendermint/pkg/trace"
 	e2e "github.com/tendermint/tendermint/test/e2e/pkg"
 	"github.com/tendermint/tendermint/test/e2e/pkg/infra"
 	"github.com/tendermint/tendermint/test/e2e/pkg/infra/docker"
@@ -77,6 +78,32 @@ func NewCLI() *CLI {
 				return fmt.Errorf("unknown infrastructure type '%s'", inft)
 			}
 
+			iurl, err := cmd.Flags().GetString(trace.FlagTracePushConfig)
+			if err != nil {
+				return err
+			}
+			itoken, err := cmd.Flags().GetString(trace.FlagTracePullAddress)
+			if err != nil {
+				return err
+			}
+			if ifd.TracePushConfig == "" {
+				ifd.TracePushConfig = iurl
+				ifd.TracePullAddress = itoken
+			}
+
+			purl, err := cmd.Flags().GetString(trace.FlagPyroscopeURL)
+			if err != nil {
+				return err
+			}
+			pTrace, err := cmd.Flags().GetBool(trace.FlagPyroscopeTrace)
+			if err != nil {
+				return err
+			}
+			if ifd.PyroscopeURL == "" {
+				ifd.PyroscopeURL = purl
+				ifd.PyroscopeTrace = pTrace
+			}
+
 			testnet, err := e2e.LoadTestnet(m, file, ifd)
 			if err != nil {
 				return fmt.Errorf("loading testnet: %s", err)
@@ -159,6 +186,14 @@ func NewCLI() *CLI {
 
 	cli.root.PersistentFlags().StringP("infrastructure-data", "", "", "path to the json file containing the infrastructure data. Only used if the 'infrastructure-type' is set to a value other than 'docker'")
 
+	cli.root.PersistentFlags().String(trace.FlagTracePushConfig, "", trace.FlagTracePushConfigDescription)
+
+	cli.root.PersistentFlags().String(trace.FlagTracePullAddress, "", trace.FlagTracePullAddressDescription)
+
+	cli.root.PersistentFlags().String(trace.FlagPyroscopeURL, "", trace.FlagPyroscopeURLDescription)
+
+	cli.root.PersistentFlags().Bool(trace.FlagPyroscopeTrace, false, trace.FlagPyroscopeTraceDescription)
+
 	cli.root.Flags().BoolVarP(&cli.preserve, "preserve", "p", false,
 		"Preserves the running of the test net after tests are completed")
 
@@ -259,7 +294,7 @@ func NewCLI() *CLI {
 	Min Block Interval
 	Max Block Interval
 over a 100 block sampling period.
-		
+
 Does not run any perturbations.
 		`,
 		RunE: func(cmd *cobra.Command, args []string) error {
@@ -299,11 +334,7 @@ Does not run any perturbations.
 				return err
 			}
 
-			if err := Cleanup(cli.testnet); err != nil {
-				return err
-			}
-
-			return nil
+			return Cleanup(cli.testnet)
 		},
 	})
 
