diff --git a/blockchain/v1/pool_test.go b/blockchain/v1/pool_test.go
index 31b9d09f7..e281586b1 100644
--- a/blockchain/v1/pool_test.go
+++ b/blockchain/v1/pool_test.go
@@ -8,6 +8,7 @@ import (
 
 	"github.com/tendermint/tendermint/libs/log"
 	"github.com/tendermint/tendermint/p2p"
+	"github.com/tendermint/tendermint/state/test/factory"
 	"github.com/tendermint/tendermint/types"
 )
 
@@ -81,7 +82,7 @@ func makeBlockPool(bcr *testBcR, height int64, peers []BpPeer, blocks map[int64]
 		bPool.peers[p.id].RequestSent(h)
 		if p.create {
 			// simulate that a block at height h has been received
-			_ = bPool.peers[p.id].AddBlock(types.MakeBlock(h, txs, nil, nil), 100)
+			_ = bPool.peers[p.id].AddBlock(types.MakeBlock(h, factory.MakeData(txs), nil, nil), 100)
 		}
 	}
 	return bPool
@@ -392,7 +393,7 @@ func TestBlockPoolAddBlock(t *testing.T) {
 			pool: makeBlockPool(testBcR, 10, []BpPeer{{ID: "P1", Height: 100}}, map[int64]tPBlocks{}),
 			args: args{
 				peerID:    "P2",
-				block:     types.MakeBlock(int64(10), txs, nil, nil),
+				block:     types.MakeBlock(int64(10), factory.MakeData(txs), nil, nil),
 				blockSize: 100,
 			},
 			poolWanted: makeBlockPool(testBcR, 10, []BpPeer{{ID: "P1", Height: 100}}, map[int64]tPBlocks{}),
@@ -404,7 +405,7 @@ func TestBlockPoolAddBlock(t *testing.T) {
 				map[int64]tPBlocks{10: {"P1", false}}),
 			args: args{
 				peerID:    "P1",
-				block:     types.MakeBlock(int64(11), txs, nil, nil),
+				block:     types.MakeBlock(int64(11), factory.MakeData(txs), nil, nil),
 				blockSize: 100,
 			},
 			poolWanted: makeBlockPool(testBcR, 10,
@@ -418,7 +419,7 @@ func TestBlockPoolAddBlock(t *testing.T) {
 				map[int64]tPBlocks{10: {"P1", true}, 11: {"P1", false}}),
 			args: args{
 				peerID:    "P1",
-				block:     types.MakeBlock(int64(10), txs, nil, nil),
+				block:     types.MakeBlock(int64(10), factory.MakeData(txs), nil, nil),
 				blockSize: 100,
 			},
 			poolWanted: makeBlockPool(testBcR, 10,
@@ -432,7 +433,7 @@ func TestBlockPoolAddBlock(t *testing.T) {
 				map[int64]tPBlocks{10: {"P1", false}}),
 			args: args{
 				peerID:    "P2",
-				block:     types.MakeBlock(int64(10), txs, nil, nil),
+				block:     types.MakeBlock(int64(10), factory.MakeData(txs), nil, nil),
 				blockSize: 100,
 			},
 			poolWanted: makeBlockPool(testBcR, 10,
@@ -446,7 +447,7 @@ func TestBlockPoolAddBlock(t *testing.T) {
 				map[int64]tPBlocks{10: {"P1", false}}),
 			args: args{
 				peerID:    "P1",
-				block:     types.MakeBlock(int64(10), txs, nil, nil),
+				block:     types.MakeBlock(int64(10), factory.MakeData(txs), nil, nil),
 				blockSize: 100,
 			},
 			poolWanted: makeBlockPool(testBcR, 10,
