diff --git a/rpc/core/types/responses.go b/rpc/core/types/responses.go
index c6ed6eb19..07ab65fd5 100644
--- a/rpc/core/types/responses.go
+++ b/rpc/core/types/responses.go
@@ -4,6 +4,8 @@ import (
 	"encoding/json"
 	"time"
 
+	"github.com/tendermint/tendermint/crypto/merkle"
+
 	abci "github.com/tendermint/tendermint/abci/types"
 	"github.com/tendermint/tendermint/crypto"
 	"github.com/tendermint/tendermint/libs/bytes"
@@ -39,12 +41,35 @@ type ResultBlock struct {
 	Block   *types.Block  `json:"block"`
 }
 
+// Single block with all data for validation
+type ResultSignedBlock struct {
+	Header       types.Header       `json:"header"`
+	Commit       types.Commit       `json:"commit"`
+	Data         types.Data         `json:"data"`
+	ValidatorSet types.ValidatorSet `json:"validator_set"`
+}
+
+// ResultHeader represents the response for a Header RPC Client query
+type ResultHeader struct {
+	Header *types.Header `json:"header"`
+}
+
 // Commit and Header
 type ResultCommit struct {
 	types.SignedHeader `json:"signed_header"`
 	CanonicalCommit    bool `json:"canonical"`
 }
 
+// ResultTxStatus represents the status of a transaction during its life cycle.
+// It contains info to locate a tx in a committed block as well as its execution code, log if it fails and status.
+type ResultTxStatus struct {
+	Height        int64  `json:"height"`
+	Index         uint32 `json:"index"`
+	ExecutionCode uint32 `json:"execution_code"`
+	Error         string `json:"error"`
+	Status        string `json:"status"`
+}
+
 // ABCI results from a block
 type ResultBlockResults struct {
 	Height                int64                     `json:"height"`
@@ -55,6 +80,14 @@ type ResultBlockResults struct {
 	ConsensusParamUpdates *abci.ConsensusParams     `json:"consensus_param_updates"`
 }
 
+type ResultDataCommitment struct {
+	DataCommitment bytes.HexBytes `json:"data_commitment"`
+}
+
+type ResultDataRootInclusionProof struct {
+	Proof merkle.Proof `json:"proof"`
+}
+
 // NewResultCommit is a helper to initialize the ResultCommit with
 // the embedded struct
 func NewResultCommit(header *types.Header, commit *types.Commit,
@@ -196,7 +229,7 @@ type ResultTx struct {
 	Index    uint32                 `json:"index"`
 	TxResult abci.ResponseDeliverTx `json:"tx_result"`
 	Tx       types.Tx               `json:"tx"`
-	Proof    types.TxProof          `json:"proof,omitempty"`
+	Proof    types.ShareProof       `json:"proof,omitempty"`
 }
 
 // Result of searching for txs
@@ -249,3 +282,8 @@ type ResultEvent struct {
 	Data   types.TMEventData   `json:"data"`
 	Events map[string][]string `json:"events"`
 }
+
+// ResultShareProof is an API response that contains a ShareProof.
+type ResultShareProof struct {
+	ShareProof types.ShareProof `json:"share_proof"`
+}
