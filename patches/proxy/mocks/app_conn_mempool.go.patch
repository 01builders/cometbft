diff --git a/proxy/mocks/app_conn_mempool.go b/proxy/mocks/app_conn_mempool.go
index 05e23dd43..daf1d4315 100644
--- a/proxy/mocks/app_conn_mempool.go
+++ b/proxy/mocks/app_conn_mempool.go
@@ -18,6 +18,10 @@ type AppConnMempool struct {
 func (_m *AppConnMempool) CheckTxAsync(_a0 types.RequestCheckTx) *abcicli.ReqRes {
 	ret := _m.Called(_a0)
 
+	if len(ret) == 0 {
+		panic("no return value specified for CheckTxAsync")
+	}
+
 	var r0 *abcicli.ReqRes
 	if rf, ok := ret.Get(0).(func(types.RequestCheckTx) *abcicli.ReqRes); ok {
 		r0 = rf(_a0)
@@ -34,7 +38,15 @@ func (_m *AppConnMempool) CheckTxAsync(_a0 types.RequestCheckTx) *abcicli.ReqRes
 func (_m *AppConnMempool) CheckTxSync(_a0 types.RequestCheckTx) (*types.ResponseCheckTx, error) {
 	ret := _m.Called(_a0)
 
+	if len(ret) == 0 {
+		panic("no return value specified for CheckTxSync")
+	}
+
 	var r0 *types.ResponseCheckTx
+	var r1 error
+	if rf, ok := ret.Get(0).(func(types.RequestCheckTx) (*types.ResponseCheckTx, error)); ok {
+		return rf(_a0)
+	}
 	if rf, ok := ret.Get(0).(func(types.RequestCheckTx) *types.ResponseCheckTx); ok {
 		r0 = rf(_a0)
 	} else {
@@ -43,7 +55,6 @@ func (_m *AppConnMempool) CheckTxSync(_a0 types.RequestCheckTx) (*types.Response
 		}
 	}
 
-	var r1 error
 	if rf, ok := ret.Get(1).(func(types.RequestCheckTx) error); ok {
 		r1 = rf(_a0)
 	} else {
@@ -57,6 +68,10 @@ func (_m *AppConnMempool) CheckTxSync(_a0 types.RequestCheckTx) (*types.Response
 func (_m *AppConnMempool) Error() error {
 	ret := _m.Called()
 
+	if len(ret) == 0 {
+		panic("no return value specified for Error")
+	}
+
 	var r0 error
 	if rf, ok := ret.Get(0).(func() error); ok {
 		r0 = rf()
@@ -71,6 +86,10 @@ func (_m *AppConnMempool) Error() error {
 func (_m *AppConnMempool) FlushAsync() *abcicli.ReqRes {
 	ret := _m.Called()
 
+	if len(ret) == 0 {
+		panic("no return value specified for FlushAsync")
+	}
+
 	var r0 *abcicli.ReqRes
 	if rf, ok := ret.Get(0).(func() *abcicli.ReqRes); ok {
 		r0 = rf()
@@ -87,6 +106,10 @@ func (_m *AppConnMempool) FlushAsync() *abcicli.ReqRes {
 func (_m *AppConnMempool) FlushSync() error {
 	ret := _m.Called()
 
+	if len(ret) == 0 {
+		panic("no return value specified for FlushSync")
+	}
+
 	var r0 error
 	if rf, ok := ret.Get(0).(func() error); ok {
 		r0 = rf()
@@ -102,13 +125,12 @@ func (_m *AppConnMempool) SetResponseCallback(_a0 abcicli.Callback) {
 	_m.Called(_a0)
 }
 
-type mockConstructorTestingTNewAppConnMempool interface {
+// NewAppConnMempool creates a new instance of AppConnMempool. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
+// The first argument is typically a *testing.T value.
+func NewAppConnMempool(t interface {
 	mock.TestingT
 	Cleanup(func())
-}
-
-// NewAppConnMempool creates a new instance of AppConnMempool. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
-func NewAppConnMempool(t mockConstructorTestingTNewAppConnMempool) *AppConnMempool {
+}) *AppConnMempool {
 	mock := &AppConnMempool{}
 	mock.Mock.Test(t)
 
