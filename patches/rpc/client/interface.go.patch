diff --git a/rpc/client/interface.go b/rpc/client/interface.go
index 9c049e650..5fe6f7527 100644
--- a/rpc/client/interface.go
+++ b/rpc/client/interface.go
@@ -7,7 +7,7 @@ to a CometBFT node, as well as higher-level functionality.
 The main implementation for production code is client.HTTP, which
 connects via http to the jsonrpc interface of the CometBFT node.
 
-For connecting to a node running in the same process (eg. when
+For connecting to a node running in the same process (e.g., when
 compiling the abci app in the same process), you can use the client.Local
 implementation.
 
@@ -65,12 +65,29 @@ type ABCIClient interface {
 // and prove anything about the chain.
 type SignClient interface {
 	Block(ctx context.Context, height *int64) (*ctypes.ResultBlock, error)
+	SignedBlock(ctx context.Context, height *int64) (*ctypes.ResultSignedBlock, error)
 	BlockByHash(ctx context.Context, hash []byte) (*ctypes.ResultBlock, error)
 	BlockResults(ctx context.Context, height *int64) (*ctypes.ResultBlockResults, error)
+	Header(ctx context.Context, height *int64) (*ctypes.ResultHeader, error)
+	HeaderByHash(ctx context.Context, hash bytes.HexBytes) (*ctypes.ResultHeader, error)
 	Commit(ctx context.Context, height *int64) (*ctypes.ResultCommit, error)
+
+	DataCommitment(ctx context.Context, start, end uint64) (*ctypes.ResultDataCommitment, error)
+	DataRootInclusionProof(
+		ctx context.Context,
+		height uint64,
+		start,
+		end uint64,
+	) (*ctypes.ResultDataRootInclusionProof, error)
+
 	Validators(ctx context.Context, height *int64, page, perPage *int) (*ctypes.ResultValidators, error)
 	Tx(ctx context.Context, hash []byte, prove bool) (*ctypes.ResultTx, error)
 
+	// ProveShares
+	// Deprecated: Use ProveSharesV2 instead.
+	ProveShares(_ context.Context, height uint64, startShare uint64, endShare uint64) (types.ShareProof, error)
+	ProveSharesV2(_ context.Context, height uint64, startShare uint64, endShare uint64) (*ctypes.ResultShareProof, error)
+
 	// TxSearch defines a method to search for a paginated set of transactions by
 	// DeliverTx event search criteria.
 	TxSearch(
@@ -89,6 +106,9 @@ type SignClient interface {
 		page, perPage *int,
 		orderBy string,
 	) (*ctypes.ResultBlockSearch, error)
+
+	// TxStatus returns the transaction status for a given transaction hash.
+	TxStatus(ctx context.Context, hash []byte) (*ctypes.ResultTxStatus, error)
 }
 
 // HistoryClient provides access to data from genesis to now in large chunks.
