diff --git a/consensus/common_test.go b/consensus/common_test.go
index ddf487cdd..511b004ea 100644
--- a/consensus/common_test.go
+++ b/consensus/common_test.go
@@ -29,6 +29,7 @@ import (
 	cmtpubsub "github.com/tendermint/tendermint/libs/pubsub"
 	cmtsync "github.com/tendermint/tendermint/libs/sync"
 	mempl "github.com/tendermint/tendermint/mempool"
+	mempoolv2 "github.com/tendermint/tendermint/mempool/cat"
 	mempoolv0 "github.com/tendermint/tendermint/mempool/v0"
 	mempoolv1 "github.com/tendermint/tendermint/mempool/v1"
 	"github.com/tendermint/tendermint/p2p"
@@ -207,7 +208,7 @@ func decideProposal(
 ) (proposal *types.Proposal, block *types.Block) {
 	cs1.mtx.Lock()
 	block, blockParts := cs1.createProposalBlock()
-	validRound := cs1.ValidRound
+	validRound := cs1.TwoThirdPrevoteRound
 	chainID := cs1.state.ChainID
 	cs1.mtx.Unlock()
 	if block == nil {
@@ -418,6 +419,17 @@ func newStateWithConfigAndBlockStore(
 			mempoolv1.WithPreCheck(sm.TxPreCheck(state)),
 			mempoolv1.WithPostCheck(sm.TxPostCheck(state)),
 		)
+	case cfg.MempoolV2:
+		logger := consensusLogger()
+		mempool = mempoolv2.NewTxPool(
+			logger,
+			config.Mempool,
+			proxyAppConnConMem,
+			state.LastBlockHeight,
+			mempoolv2.WithMetrics(memplMetrics),
+			mempoolv2.WithPreCheck(sm.TxPreCheck(state)),
+			mempoolv2.WithPostCheck(sm.TxPostCheck(state)),
+		)
 	}
 	if thisConfig.Consensus.WaitForTxs() {
 		mempool.EnableTxsAvailable()
@@ -706,7 +718,10 @@ func consensusLogger() log.Logger {
 	return log.TestingLoggerWithColorFn(func(keyvals ...interface{}) term.FgBgColor {
 		for i := 0; i < len(keyvals)-1; i += 2 {
 			if keyvals[i] == "validator" {
-				return term.FgBgColor{Fg: term.Color(uint8(keyvals[i+1].(int) + 1))}
+				index, ok := keyvals[i+1].(int)
+				if ok {
+					return term.FgBgColor{Fg: term.Color(uint8(index + 1))}
+				}
 			}
 		}
 		return term.FgBgColor{}
