diff --git a/rpc/core/routes.go b/rpc/core/routes.go
index 65fe7365a..b2c8d69ee 100644
--- a/rpc/core/routes.go
+++ b/rpc/core/routes.go
@@ -14,26 +14,34 @@ var Routes = map[string]*rpc.RPCFunc{
 	"unsubscribe_all": rpc.NewWSRPCFunc(UnsubscribeAll, ""),
 
 	// info API
-	"health":               rpc.NewRPCFunc(Health, ""),
-	"status":               rpc.NewRPCFunc(Status, ""),
-	"net_info":             rpc.NewRPCFunc(NetInfo, ""),
-	"blockchain":           rpc.NewRPCFunc(BlockchainInfo, "minHeight,maxHeight", rpc.Cacheable()),
-	"genesis":              rpc.NewRPCFunc(Genesis, "", rpc.Cacheable()),
-	"genesis_chunked":      rpc.NewRPCFunc(GenesisChunked, "chunk", rpc.Cacheable()),
-	"block":                rpc.NewRPCFunc(Block, "height", rpc.Cacheable("height")),
-	"block_by_hash":        rpc.NewRPCFunc(BlockByHash, "hash", rpc.Cacheable()),
-	"block_results":        rpc.NewRPCFunc(BlockResults, "height", rpc.Cacheable("height")),
-	"commit":               rpc.NewRPCFunc(Commit, "height", rpc.Cacheable("height")),
-	"check_tx":             rpc.NewRPCFunc(CheckTx, "tx"),
-	"tx":                   rpc.NewRPCFunc(Tx, "hash,prove", rpc.Cacheable()),
-	"tx_search":            rpc.NewRPCFunc(TxSearchMatchEvents, "query,prove,page,per_page,order_by,match_events"),
-	"block_search":         rpc.NewRPCFunc(BlockSearchMatchEvents, "query,page,per_page,order_by,match_events"),
-	"validators":           rpc.NewRPCFunc(Validators, "height,page,per_page", rpc.Cacheable("height")),
-	"dump_consensus_state": rpc.NewRPCFunc(DumpConsensusState, ""),
-	"consensus_state":      rpc.NewRPCFunc(ConsensusState, ""),
-	"consensus_params":     rpc.NewRPCFunc(ConsensusParams, "height", rpc.Cacheable("height")),
-	"unconfirmed_txs":      rpc.NewRPCFunc(UnconfirmedTxs, "limit"),
-	"num_unconfirmed_txs":  rpc.NewRPCFunc(NumUnconfirmedTxs, ""),
+	"health":                    rpc.NewRPCFunc(Health, ""),
+	"status":                    rpc.NewRPCFunc(Status, ""),
+	"net_info":                  rpc.NewRPCFunc(NetInfo, ""),
+	"blockchain":                rpc.NewRPCFunc(BlockchainInfo, "minHeight,maxHeight", rpc.Cacheable()),
+	"genesis":                   rpc.NewRPCFunc(Genesis, "", rpc.Cacheable()),
+	"genesis_chunked":           rpc.NewRPCFunc(GenesisChunked, "chunk", rpc.Cacheable()),
+	"block":                     rpc.NewRPCFunc(Block, "height", rpc.Cacheable("height")),
+	"signed_block":              rpc.NewRPCFunc(SignedBlock, "height", rpc.Cacheable("height")),
+	"block_by_hash":             rpc.NewRPCFunc(BlockByHash, "hash", rpc.Cacheable()),
+	"block_results":             rpc.NewRPCFunc(BlockResults, "height", rpc.Cacheable("height")),
+	"commit":                    rpc.NewRPCFunc(Commit, "height", rpc.Cacheable("height")),
+	"header":                    rpc.NewRPCFunc(Header, "height", rpc.Cacheable("height")),
+	"header_by_hash":            rpc.NewRPCFunc(HeaderByHash, "hash"),
+	"data_commitment":           rpc.NewRPCFunc(DataCommitment, "start,end"),
+	"check_tx":                  rpc.NewRPCFunc(CheckTx, "tx"),
+	"tx":                        rpc.NewRPCFunc(Tx, "hash,prove", rpc.Cacheable()),
+	"prove_shares":              rpc.NewRPCFunc(ProveShares, "height,startShare,endShare"),
+	"prove_shares_v2":           rpc.NewRPCFunc(ProveSharesV2, "height,startShare,endShare"),
+	"data_root_inclusion_proof": rpc.NewRPCFunc(DataRootInclusionProof, "height,start,end"),
+	"tx_search":                 rpc.NewRPCFunc(TxSearchMatchEvents, "query,prove,page,per_page,order_by,match_events"),
+	"block_search":              rpc.NewRPCFunc(BlockSearchMatchEvents, "query,page,per_page,order_by,match_events"),
+	"validators":                rpc.NewRPCFunc(Validators, "height,page,per_page", rpc.Cacheable("height")),
+	"dump_consensus_state":      rpc.NewRPCFunc(DumpConsensusState, ""),
+	"consensus_state":           rpc.NewRPCFunc(ConsensusState, ""),
+	"consensus_params":          rpc.NewRPCFunc(ConsensusParams, "height", rpc.Cacheable("height")),
+	"unconfirmed_txs":           rpc.NewRPCFunc(UnconfirmedTxs, "limit"),
+	"num_unconfirmed_txs":       rpc.NewRPCFunc(NumUnconfirmedTxs, ""),
+	"tx_status":                 rpc.NewRPCFunc(TxStatus, "hash"),
 
 	// tx broadcast API
 	"broadcast_tx_commit": rpc.NewRPCFunc(BroadcastTxCommit, "tx"),
